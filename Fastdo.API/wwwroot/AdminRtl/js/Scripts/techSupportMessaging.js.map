{"version":3,"file":"techSupportMessaging.js","sourceRoot":"","sources":["techSupportMessaging.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport helper from \"./utilities\";\r\nenum EUserType {\r\n    Pharmacy = 1,\r\n    Stock = 2,\r\n    Admin = 3\r\n}\r\ninterface questionModel {\r\n    createdAt: string\r\n    id: string\r\n    message: string\r\n    relatedTo: string\r\n    relatedToId: string\r\n    seenAt:string\r\n    senderId: string\r\n    userType: EUserType\r\n    viewed: boolean\r\n}\r\ninterface questionDetailModel {\r\n    createdAt: string\r\n    id: string\r\n    SenderName: string\r\n    SenderAddress:string\r\n    message: string\r\n    relatedToId: string\r\n    seenAt: string\r\n    senderId: string\r\n    userType: EUserType\r\n    viewed: boolean\r\n}\r\ninterface ISubscriber {\r\n    onGetDataList: (data: questionDetailModel[]) => void;\r\n}\r\n\r\nconst questionNotificationStoreName = \"quesNotifications\";\r\nclass NotificationStore {\r\n\r\n    constructor() {\r\n        this.checkIfStoreExists();\r\n    }\r\n    private checkIfStoreExists() {\r\n        if (!localStorage.getItem(questionNotificationStoreName)) {\r\n            localStorage.setItem(questionNotificationStoreName, JSON.stringify([]));\r\n        }\r\n    }\r\n    private getStore() {\r\n        return JSON.parse(localStorage.getItem(questionNotificationStoreName)) as questionModel[] || [];\r\n    }\r\n    private setStore(_store: questionModel[]) {\r\n        localStorage.setItem(questionNotificationStoreName, JSON.stringify(_store));\r\n    }\r\n    get count() {\r\n        return this.getStore().length;\r\n    }\r\n    get notificationDisplayMessage() {\r\n\r\n        return `لديك  ${this.count} اشعارات`;\r\n    }\r\n    getAll() {\r\n        return this.getStore();\r\n    }\r\n    add(q: questionModel) {\r\n        let store = this.getStore();\r\n        q.viewed = false;\r\n        store.push(q);\r\n        this.setStore(store);\r\n        return store;\r\n    }\r\n    setQuesList(qArr: questionModel[]) {     \r\n        this.setStore(qArr);\r\n        return qArr;\r\n    }\r\n    removeAll() {\r\n        this.setStore([]);\r\n    }\r\n    remove(qId: string) {\r\n        let store = this.getStore();\r\n        store = store.filter(q => q.id != qId);\r\n        this.setStore(store);\r\n        return store;\r\n    }\r\n    setAsSeen(qId: string) {\r\n        let store = this.getStore();\r\n        let ind = store.findIndex(q => q.id == qId);\r\n        if (ind > -1) {\r\n            store[ind].viewed = true;\r\n        }\r\n        this.setStore(store);\r\n        return store;\r\n    }\r\n}\r\n\r\nconst techHubOperations = {\r\n    notifStore: new NotificationStore() as NotificationStore,\r\n    setStore(_notifStore: NotificationStore) {\r\n        this.notifStore = _notifStore;\r\n    },\r\n    connection: {} as signalR.HubConnection,\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    },\r\n    hubUrl: \"/hub/techsupport\",\r\n    startConnection() {\r\n        this.connection.start().catch(err => document.write(err));\r\n    },\r\n    onreconnected(connectionId:string) {\r\n        console.log('reconnect on connection id =' + connectionId)\r\n    },\r\n    onCustomerAddQuestion(quesData: questionModel) {\r\n        let questions = this.notifStore.add(quesData);\r\n        NotificationDom.setNotifications(questions);\r\n        console.log(quesData);\r\n    },\r\n    onGetNotSeenQuestions(data: questionDetailModel[]) {\r\n        console.log('list of not seen questions')\r\n        TechSupportPageDom.reDisplayMessages(data);\r\n    },\r\n    refreshNotifications() {\r\n        this.setStore(new NotificationStore());\r\n        let AllQues = this.notifStore.getAll().filter(e => !e.viewed);\r\n        this.notifStore.setQuesList(AllQues);\r\n        NotificationDom.setNotifications(AllQues);\r\n    },\r\n    init() {\r\n        this.refreshNotifications();\r\n        this.connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(this.hubUrl, { accessTokenFactory: () => this.getToken() })\r\n            .build();\r\n        this.onreconnected = this.connection.onreconnected;\r\n        this.connection.start();\r\n        this.connection.on(\"onQuestionAdded\", this.onCustomerAddQuestion.bind(this));\r\n        if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n            TechSupportPageDom.reDisplayMessages([]);\r\n            this.connection.on(\"onGetNotSeenQuestions\", this.onGetNotSeenQuestions.bind(this));\r\n        }\r\n    }\r\n}\r\n\r\nconst NotificationDom = {\r\n    get notifEl() { return $('#techNotification');},\r\n    clonedNotif: $('#cloned-notif'),\r\n    notifTitleCountEl: $('#techNotification .title-count'),\r\n    notifTitleEl: $('#techNotification .app-notification__title'),\r\n    notifNumber: $('#techNotification .notif-number:eq(0)'),\r\n    notifContent: $('#techNotification .notif-content'),\r\n    notifBodyContainer: $('#techNotification .app-notification__content'),\r\n    reDisplayNotificationCount(count:number) {\r\n        if (count < 1) {\r\n            this.notifNumber.hide();\r\n            this.notifTitleEl.text('ليس لديك اشعارات');\r\n        }\r\n        else {\r\n            this.notifNumber.text(count).show();\r\n            this.notifTitleCountEl.text(count);\r\n           \r\n        }\r\n    },\r\n    generateNewNotifEl() {\r\n        let el = this.clonedNotif.clone(true);\r\n        el.removeClass('d-none').removeAttr('id').removeProp('id');\r\n        return el;\r\n    },\r\n    reDisplayNotificationContent(notifArr: questionModel[]) {\r\n        let container = $();\r\n        notifArr.forEach(notif => {\r\n            let notifEl = this.generateNewNotifEl();\r\n            notifEl.data('id', notif.id);\r\n            if (notif.viewed) {\r\n                notifEl.addClass('seen');\r\n            }\r\n            notifEl.find('p:eq(0)').text(notif.message);\r\n            notifEl.find('p:eq(1)').text(helper.getDateObj(notif.createdAt).toLocaleString());\r\n            container=container.add(notifEl);\r\n        });\r\n        this.notifBodyContainer.empty().append(container);\r\n    },\r\n    setNotifications(notifArr: questionModel[]) {\r\n        if (notifArr) {\r\n            this.reDisplayNotificationCount(notifArr.filter(n => !n.viewed).length || 0);\r\n            this.reDisplayNotificationContent(notifArr);\r\n        }\r\n    },\r\n    handleOnNotifElClicked() {\r\n        let $this = this;\r\n        $(document.body).on('click','.app-notification_li', function () {\r\n            console.log('clicked');\r\n            const $el = $(this);\r\n            let id = $el.data('id');\r\n            console.log('id is ' + id);\r\n            let qes = techHubOperations.notifStore.setAsSeen(id);\r\n            $this.setNotifications(qes);\r\n        });\r\n    },\r\n    init() {\r\n        this.handleOnNotifElClicked();\r\n    }\r\n}\r\n\r\nconst TechSupportPageDom = {\r\n    get checkIfCurrentPageIsTechSupport() {\r\n        return !!this.messageCardColumnContainerEl;\r\n    },\r\n    userTypeText(type: EUserType) {\r\n        if (type == EUserType.Pharmacy) return \"ص\";\r\n        if (type == EUserType.Stock) return \"م\";\r\n        return \"\";\r\n    },\r\n    get clonedMessageCard() { return $('#cloned-message-card') },\r\n    _generateNewMessageCard(dataModel: questionDetailModel) {\r\n        let _newCard = this.clonedMessageCard.find('.cloned-card:eq(0)').clone(true);\r\n        _newCard.find('.message-content .message').text(dataModel.message);\r\n        _newCard.find('.customer-title-suffex').text(this.userTypeText(dataModel.userType));\r\n        _newCard.find('.customer-title-text').text(dataModel.SenderName);\r\n        _newCard.find('.customer-address').text(dataModel.SenderAddress);\r\n        _newCard.find('.message-time').text(helper.getDateObj(dataModel.createdAt).toLocaleString());\r\n        return _newCard;\r\n    },\r\n    _getNoMessagesDisplay() {\r\n        var el = this.clonedMessageCard.find('.cloned-no-message:eq(0)').clone(true);\r\n        return el;\r\n    },\r\n    get messageCardColumnContainerEl() {\r\n        return $('.message_card-column:eq(0)');\r\n    },\r\n    reDisplayMessages(dataArr: questionDetailModel[]) {\r\n        if (!dataArr || dataArr.length == 0) {\r\n            this.messageCardColumnContainerEl.empty().append(this._getNoMessagesDisplay());\r\n            return;\r\n        }\r\n        let conatiner = $();\r\n        dataArr.forEach(e => {\r\n            conatiner = conatiner.add(this._generateNewMessageCard(e));\r\n        });\r\n        this.messageCardColumnContainerEl.empty().append(conatiner);\r\n    }\r\n}\r\n\r\nclass QuestionsCRUD  {\r\n    private _questions: questionDetailModel[] = [];\r\n    private _obj: QuestionsCRUD;\r\n    private _subscripers: ISubscriber[] = [];\r\n    private publishDataList() {\r\n        this._subscripers.forEach(s => {\r\n            s.onGetDataList(this._questions.slice());\r\n        });\r\n    }\r\n    private constructor() { }\r\n    static Create() {\r\n        if (!this.prototype._obj) {\r\n            this.prototype._obj = new QuestionsCRUD();\r\n        }\r\n        return this.prototype._obj;\r\n    }\r\n    getCustomerQuestions() {\r\n        $.get(`${helper.Urls.techSupportUrl}/notResponded`)\r\n            .done(data => {\r\n                this._questions = data;\r\n                this.publishDataList();\r\n                setTimeout(() => {\r\n                   \r\n                }, 3000);\r\n            }).fail(err => {\r\n                alert('cannot get data')\r\n            }).always(e => {\r\n\r\n            });\r\n    }\r\n    subscribe(_subscriber: ISubscriber) {\r\n        this._subscripers.push(_subscriber);\r\n    }\r\n}\r\n\r\nconst TechSupportSquestionManager = {\r\n    quesCRUD: null as QuestionsCRUD,\r\n    onGetDataList(data: questionDetailModel[]) {\r\n        TechSupportPageDom.reDisplayMessages(data);\r\n    },\r\n    handleOnGetData() {\r\n        this.quesCRUD.subscribe(this);\r\n    },\r\n    start() {\r\n        if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n            this.quesCRUD = QuestionsCRUD.Create();\r\n            this.quesCRUD.getCustomerQuestions();\r\n            this.handleOnGetData();\r\n        }\r\n    }\r\n}.start();\r\n\r\nconst notificationManager = {\r\n    startHandle() {\r\n        NotificationDom.init(); \r\n        setTimeout(() => {\r\n            techHubOperations.init();\r\n        }, 0);\r\n    }\r\n}.startHandle();\r\n"]}