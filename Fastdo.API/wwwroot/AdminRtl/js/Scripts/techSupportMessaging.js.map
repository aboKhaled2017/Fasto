{"version":3,"file":"techSupportMessaging.js","sourceRoot":"","sources":["techSupportMessaging.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport helper from \"./utilities\";\r\nenum EUserType {\r\n    Pharmacy = 1,\r\n    Stock = 2,\r\n    Admin = 3\r\n}\r\ninterface questionModel {\r\n    createdAt: string\r\n    id: string\r\n    message: string\r\n    relatedTo: string\r\n    relatedToId: string\r\n    seenAt:string\r\n    senderId: string\r\n    userType: EUserType\r\n    viewed: boolean\r\n}\r\ninterface adminResponsModel {\r\n    id: string \r\n    createdAt: string \r\n    message: string\r\n    seenAt: string\r\n    relatedToId: string\r\n}\r\ninterface questionDetailModel {\r\n    createdAt: string\r\n    id: string\r\n    senderName: string\r\n    senderAddress:string\r\n    message: string\r\n    seenAt: string\r\n    senderId: string\r\n    userType: EUserType\r\n    viewed: boolean\r\n    responses: adminResponsModel[]\r\n}\r\ninterface ISubscriber {\r\n    onGetDataList: (data: questionDetailModel[]) => void;\r\n    onQuesSelected: (q: questionDetailModel) => void\r\n    onQuesRespondedOn: (q: questionDetailModel) => void\r\n    onFailToSendRespons: () => void\r\n    onSuccessToSendFaildMessage: () => void\r\n    onGetNewQuestion: (q: questionDetailModel)=>void\r\n}\r\n\r\nconst questionNotificationStoreName = \"quesNotifications\";\r\nconst SelectedNotifyquestion = \"selectedNotifQues\";\r\nclass NotificationStore {\r\n\r\n    constructor() {\r\n        this.checkIfStoreExists();\r\n    }\r\n    private checkIfStoreExists() {\r\n        if (!localStorage.getItem(questionNotificationStoreName)) {\r\n            localStorage.setItem(questionNotificationStoreName, JSON.stringify([]));\r\n        }\r\n    }\r\n    private getStore() {\r\n        return JSON.parse(localStorage.getItem(questionNotificationStoreName)) as questionDetailModel[] || [];\r\n    }\r\n    private setStore(_store: questionDetailModel[]) {\r\n        localStorage.setItem(questionNotificationStoreName, JSON.stringify(_store));\r\n    }\r\n    get count() {\r\n        return this.getStore().length;\r\n    }\r\n    get notificationDisplayMessage() {\r\n\r\n        return `لديك  ${this.count} اشعارات`;\r\n    }\r\n    getAll() {\r\n        return this.getStore();\r\n    }\r\n    getById(id: string) {\r\n        return this.getAll().find(e => e.id == id);\r\n    }\r\n    add(q: questionDetailModel) {\r\n        let store = this.getStore();\r\n        q.viewed = false;\r\n        store.push(q);\r\n        this.setStore(store);\r\n        return store;\r\n    }\r\n    setQuesList(qArr: questionDetailModel[]) {     \r\n        this.setStore(qArr);\r\n        return qArr;\r\n    }\r\n    removeAll() {\r\n        this.setStore([]);\r\n    }\r\n    remove(qId: string) {\r\n        let store = this.getStore();\r\n        store = store.filter(q => q.id != qId);\r\n        this.setStore(store);\r\n        return store;\r\n    }\r\n    setAsSeen(qId: string) {\r\n        let store = this.getStore();\r\n        let ind = store.findIndex(q => q.id == qId);\r\n        if (ind > -1) {\r\n            store[ind].viewed = true;\r\n            this.setStore(store);          \r\n        }  \r\n        return store;\r\n    }\r\n}\r\n\r\nconst techHubOperations = {\r\n    notifStore: new NotificationStore() as NotificationStore,\r\n    setStore(_notifStore: NotificationStore) {\r\n        this.notifStore = _notifStore;\r\n    },\r\n    connection: {} as signalR.HubConnection,\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    },\r\n    hubUrl: \"/hub/techsupport\",\r\n    startConnection() {       \r\n        this.connection.start().catch((err:any) => document.write(err));\r\n    },\r\n    onreconnected(connectionId?: string | undefined) {\r\n        console.log('reconnect on connection id =' + connectionId)\r\n    },\r\n    onCustomerAddQuestion(quesData: questionDetailModel) {\r\n        let questions = this.notifStore.add(quesData);\r\n        NotificationDom.setNotifications(questions);\r\n        if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n            TechSupportPageDom.quesCRUD.addNewQuestion(quesData);\r\n        }\r\n    },\r\n    onGetNotSeenQuestions(data: questionDetailModel[]) {\r\n        console.log('list of not seen questions')\r\n        TechSupportPageDom.reDisplayMessages(data);\r\n    },\r\n    refreshNotifications() {\r\n        this.setStore(new NotificationStore());\r\n        let AllQues = this.notifStore.getAll().filter(e => !e.viewed);\r\n        this.notifStore.setQuesList(AllQues);\r\n        NotificationDom.setNotifications(AllQues);\r\n    },\r\n    init() {\r\n        this.refreshNotifications();\r\n        let token = this.getToken() as string;\r\n        this.connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(this.hubUrl, { accessTokenFactory: () => token })\r\n            .build();\r\n        this.onreconnected = this.connection.onreconnected as any;\r\n        this.connection.start();\r\n        this.connection.on(\"onQuestionAdded\", this.onCustomerAddQuestion.bind(this));\r\n        if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n            TechSupportPageDom.reDisplayMessages([]);\r\n            this.connection.on(\"onGetNotSeenQuestions\", this.onGetNotSeenQuestions.bind(this));\r\n        }\r\n    }\r\n}\r\n\r\nconst NotificationDom = {\r\n    quesCRUD: null as QuestionsCRUD,\r\n    get notifEl() { return $('#techNotification');},\r\n    clonedNotif: $('#cloned-notif'),\r\n    storeSelectedNotificationAndRefresh(q: questionDetailModel) {\r\n        localStorage.setItem(SelectedNotifyquestion, JSON.stringify(q));\r\n        location.href = helper.Urls.adminTechSupportUrl;\r\n    },\r\n    notifTitleCountEl: $('#techNotification .title-count'),\r\n    notifTitleEl: $('#techNotification .app-notification__title'),\r\n    notifNumber: $('#techNotification .notif-number:eq(0)'),\r\n    notifContent: $('#techNotification .notif-content'),\r\n    notifBodyContainer: $('#techNotification .app-notification__content'),\r\n    reDisplayNotificationCount(count:number) {\r\n        if (count < 1) {\r\n            this.notifNumber.hide();\r\n            this.notifTitleEl.text('ليس لديك اشعارات');\r\n        }\r\n        else {\r\n            this.notifNumber.text(count).show();\r\n            this.notifTitleCountEl.text(count);\r\n           \r\n        }\r\n    },\r\n    generateNewNotifEl() {\r\n        let el = this.clonedNotif.clone(true);\r\n        el.removeClass('d-none').removeAttr('id').removeProp('id');\r\n        return el;\r\n    },\r\n    reDisplayNotificationContent(notifArr: questionDetailModel[]) {\r\n        let container = $();\r\n        let elements = [];\r\n        notifArr.forEach(notif => {\r\n            let notifEl = this.generateNewNotifEl();\r\n            notifEl.data('id', notif.id);\r\n            if (notif.viewed) {\r\n                notifEl.addClass('seen');\r\n            }\r\n            notifEl.find('p:eq(0)').text(notif.message);\r\n            notifEl.find('p:eq(1)').text(helper.getDateObj(notif.createdAt).toLocaleString());\r\n            elements.unshift(notifEl);           \r\n        });\r\n  \r\n        var dom = elements.forEach(e => {\r\n            container = container.add(e);\r\n        })\r\n        this.notifBodyContainer.empty().append(container);\r\n    },\r\n    setNotifications(notifArr: questionDetailModel[]) {\r\n        if (notifArr) {\r\n            this.reDisplayNotificationCount(notifArr.filter(n => !n.viewed).length || 0);\r\n            this.reDisplayNotificationContent(notifArr);\r\n        }\r\n    },\r\n    onSelectedQuesMessage(id: string) {\r\n        let qs = techHubOperations.notifStore.setAsSeen(id);\r\n        qs = qs.filter(e => e.id != id);\r\n        this.setNotifications(qs);\r\n    },\r\n    handleOnNotifElClicked() {\r\n        let $this = this;\r\n        $(document.body).on('click','.app-notification_li', function () {         \r\n            const $el = $(this);\r\n            let id = $el.data('id');\r\n            let qes = techHubOperations.notifStore.setAsSeen(id);\r\n            let q = techHubOperations.notifStore.getById(id);\r\n            $this.setNotifications(qes);\r\n            \r\n            if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n                $this.quesCRUD.setSelectedQuestion(q);\r\n            }\r\n            else {\r\n                $this.storeSelectedNotificationAndRefresh(q);\r\n            }\r\n        });\r\n    },\r\n    init() {\r\n        this.handleOnNotifElClicked();\r\n        if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n            this.quesCRUD = QuestionsCRUD.Create();\r\n        }\r\n    }\r\n}\r\n\r\nconst TechSupportPageDom = {\r\n    quesCRUD: null as QuestionsCRUD,\r\n    storeCurrentSelectedMessage(q: questionDetailModel) {\r\n        localStorage.setItem(SelectedNotifyquestion, JSON.stringify(q));\r\n    },\r\n    get clonedResponseMessageContaner() { return $('#cloned-reponse-message'); },\r\n    get messageResponsesEl() { return $('#responses'); },\r\n    get submitResponseBtn() { return $('#sendResponseBtn'); },\r\n    get faildToSendResponseBtn() { return $('#faildToSendResponseBtn');},\r\n    get messageTextInpEl() { return $('#responseTextBox') },\r\n    _lastAppendedTextEl: null as JQuery,\r\n    _generateResponseMessageContainer(res: adminResponsModel) {\r\n        let el = this.clonedResponseMessageContaner.find('.response-message-container:eq(0)').clone();\r\n        el.find('.response-text').text(res.message);\r\n        return el;\r\n    },\r\n    get messageCard() { return $(this.messageCardselector); },\r\n    getStoredSelectedNotifiedQuestionIfExsists() {\r\n        let qstr = localStorage.getItem(SelectedNotifyquestion);\r\n        let q = qstr ? JSON.parse(qstr) as questionDetailModel : null;\r\n        //if (q) localStorage.removeItem(SelectedNotifyquestion);\r\n        return q;\r\n    },\r\n    get messageCardselector() { return \".message-card\";},\r\n    get loadingOgverlay() { return $('.ContainerOverlay'); },\r\n    stopLoading() {\r\n        this.loadingOgverlay.hide();\r\n    },\r\n    startLoading() { this.loadingOgverlay.show();},\r\n    get checkIfCurrentPageIsTechSupport() {\r\n        return this.messageCardColumnContainerEl.length>0;\r\n    },\r\n    userTypeText(type: EUserType) {\r\n        if (type == EUserType.Pharmacy) return \"ص\";\r\n        if (type == EUserType.Stock) return \"م\";\r\n        return \"\";\r\n    },\r\n    fullUserTypeText(type: EUserType) {\r\n        if (type == EUserType.Pharmacy) return \"صيدلية\";\r\n        if (type == EUserType.Stock) return \"مخزن\";\r\n        return \"\";\r\n    },\r\n    get clonedMessageCard() { return $('#cloned-message-card') },\r\n    get selectedMessageWrapperEl() { return $('.message-chatting-column:eq(0)');},\r\n    get selectedMessageEl() { return $('.message-chatting-column .sender-message:eq(0)'); },\r\n    _redisplaySelectedMessageEl(q: questionDetailModel, isNewResponse: boolean=false) {\r\n        if (!q) {\r\n            this.selectedMessageWrapperEl.hide();\r\n        }\r\n        else {\r\n            this.selectedMessageWrapperEl.show();\r\n            this.selectedMessageEl.find('.sender-type').text(this.fullUserTypeText(q.userType));\r\n            this.selectedMessageEl.find('.sender-name').text(q.senderName);\r\n            this.selectedMessageEl.find('.sender-name').text(q.senderName);\r\n            this.selectedMessageEl.find('.sender-address').text(q.senderAddress);\r\n            this.selectedMessageEl.find('.created-at').text(helper.getDateObj(q.createdAt).toLocaleString());\r\n            this.selectedMessageEl.find('.message-text').text(q.message);\r\n            let responsesContainer = $();\r\n            if (q.responses && q.responses.length > 0) {\r\n               \r\n                for (let k = q.responses.length - 1; k >= 0; k--) {\r\n                    let _element = this._generateResponseMessageContainer(q.responses[k]);\r\n                    if (isNewResponse && k == q.responses.length - 1) {\r\n                        this._lastAppendedTextEl = _element;\r\n                    }\r\n                    responsesContainer = responsesContainer.add(_element);\r\n                }\r\n                this.messageResponsesEl.empty().append(responsesContainer);\r\n            }\r\n            else {\r\n                this.messageResponsesEl.empty();\r\n            }\r\n        }\r\n    },\r\n    _generateNewMessageCard(dataModel: questionDetailModel) {\r\n        \r\n        let _newCard = this.clonedMessageCard.find('.cloned-card:eq(0)').clone(true);\r\n        _newCard.find(this.messageCardselector).data('id', dataModel.id);\r\n        _newCard.find('.message-content .message').text(dataModel.message);\r\n        _newCard.find('.customer-title-suffex').text(this.userTypeText(dataModel.userType));\r\n        _newCard.find('.customer-title-text').text(dataModel.senderName);\r\n        _newCard.find('.customer-address').text(dataModel.senderAddress);\r\n        _newCard.find('.message-time').text(helper.getDateObj(dataModel.createdAt).toLocaleString());\r\n        return _newCard;\r\n    },\r\n    _getNoMessagesDisplay() {\r\n        var el = this.clonedMessageCard.find('.cloned-no-message:eq(0)').clone(true);\r\n        return el;\r\n    },\r\n    onGetNewQuestion(q: questionDetailModel) {\r\n        const el = this._generateNewMessageCard(q);\r\n        this.messageCardColumnContainerEl.prepend(el);\r\n    },\r\n    get messageCardColumnContainerEl() {\r\n        return $('.message_card-column:eq(0)');\r\n    },\r\n    reDisplayMessages(dataArr: questionDetailModel[]) {\r\n        if (!dataArr || dataArr.length == 0) {\r\n            this.messageCardColumnContainerEl.empty().append(this._getNoMessagesDisplay());\r\n            return;\r\n        }\r\n        let conatiner = $();\r\n        dataArr.forEach(e => {\r\n            conatiner = conatiner.add(this._generateNewMessageCard(e));\r\n        });\r\n        this.messageCardColumnContainerEl.empty().append(conatiner);\r\n    },\r\n    setSelectedQuestion(q: questionDetailModel) {\r\n        this.storeCurrentSelectedMessage(q);\r\n        this._redisplaySelectedMessageEl(q);\r\n    },\r\n    handleOnMessageCardClick() {\r\n        const $context = this;\r\n        $(document.body).on('click', this.messageCardselector, function () {\r\n            let $this = $(this);\r\n            let selectedId = $this.data('id');\r\n            $context.quesCRUD.setSelectedQuestionById(selectedId);\r\n            NotificationDom.onSelectedQuesMessage(selectedId);\r\n        });\r\n        let selectedQuesAtInit = this.getStoredSelectedNotifiedQuestionIfExsists();\r\n        if (selectedQuesAtInit) {\r\n            $context.quesCRUD.setSelectedQuestion(selectedQuesAtInit);\r\n        }\r\n    },\r\n    onQuesRespondedOn(q: questionDetailModel) {\r\n        this.storeCurrentSelectedMessage(q);\r\n        this._redisplaySelectedMessageEl(q,true);\r\n    },\r\n    removeFaildResponseError() {\r\n        this._lastAppendedTextEl.removeClass('error');\r\n    },\r\n    onFailToSendRespons() {\r\n        this._lastAppendedTextEl.addClass('error');\r\n    },\r\n    handleOnSubmitResponse() {\r\n        this.submitResponseBtn.on('click', () => {\r\n            let val = this.messageTextInpEl.val() as string;\r\n            val ? val.trim() : null;\r\n            if (val) {\r\n                this.quesCRUD.respondOnQuestion(val);\r\n                this.messageTextInpEl.val('');\r\n            }\r\n        });\r\n    },\r\n    onSuccessToSendFaildMessage() {\r\n        this.removeFaildResponseError();\r\n    },\r\n    handleOntryToSendFaildMessageAgain() {\r\n        $(document.body).on('click', '#faildToSendResponseBtn', () => {\r\n            this.quesCRUD.sendFaildResponseAgain();\r\n        });\r\n    },\r\n    init(crud: QuestionsCRUD) {      \r\n        this.quesCRUD = crud;\r\n        this.handleOnMessageCardClick();\r\n        this.handleOnSubmitResponse();\r\n        this.handleOntryToSendFaildMessageAgain();\r\n        this.quesCRUD.subscribe(this as any as ISubscriber);\r\n    },\r\n}\r\n\r\nclass QuestionsCRUD  {\r\n    selectedQues: questionDetailModel;\r\n    lastRespondedMessage: string;\r\n    private _questions: questionDetailModel[] = [];\r\n    private _obj: QuestionsCRUD = {} as any;\r\n    private _subscripers: ISubscriber[] = [];\r\n    private publishDataList() {\r\n        this._subscripers.forEach(s => {\r\n            if (s.onGetDataList) s.onGetDataList(this._questions.slice());\r\n        });\r\n    }\r\n    private constructor() { }\r\n    static Create() {\r\n        if (!this.prototype._obj) {\r\n            this.prototype._obj = new QuestionsCRUD();\r\n        }\r\n        return this.prototype._obj;\r\n    }\r\n    getCustomerQuestions() {\r\n        TechSupportPageDom.startLoading();\r\n        $.get(`${helper.Urls.techSupportUrl}/notResponded`)\r\n            .done(data => {\r\n                this._questions = data;\r\n                this.publishDataList();\r\n                setTimeout(() => {\r\n                   \r\n                }, 3000);\r\n            }).fail(err => {\r\n                alert('cannot get data')\r\n            }).always(e => {\r\n                TechSupportPageDom.stopLoading();\r\n            });\r\n    }\r\n    subscribe(_subscriber: ISubscriber) {\r\n        this._subscripers.push(_subscriber);\r\n    }\r\n    private _setSelectedQuestion(q: questionDetailModel) {\r\n        this.selectedQues = q;\r\n        this._subscripers.forEach(s => {\r\n            if (s.onQuesSelected) s.onQuesSelected(q);\r\n        });\r\n        if (q && q.id) {\r\n            this.markAsSeen();\r\n        }\r\n    }\r\n    setSelectedQuestion(q: questionDetailModel) {\r\n        this._setSelectedQuestion(q);\r\n    }\r\n    setSelectedQuestionById(id: string) {\r\n        let q = this._questions.find(e => e.id == id);\r\n        this._setSelectedQuestion(q);\r\n    }\r\n    private _markAsSeen() {\r\n        this.selectedQues.seenAt = new Date().toDateString();\r\n        let qInd = this._questions.findIndex(e => e.id == this.selectedQues.id);\r\n        this._questions[qInd] = this.selectedQues;\r\n    }\r\n    markAsSeen() {\r\n        if (this.selectedQues.seenAt) return;\r\n        let setting: JQuery.AjaxSettings = {\r\n            url: `${helper.Urls.techSupportUrl}/${this.selectedQues.id}`,\r\n            method:'PUT'\r\n        };\r\n        $.ajax(setting)\r\n            .done(() => {\r\n                this._markAsSeen();\r\n            })\r\n            .fail(() => {\r\n                console.log('faild to mark messsage as seen')\r\n            })\r\n            .always(() => {\r\n            });\r\n    }\r\n    private _responseOnQuestion(id,response: string) {\r\n        let qInd = this._questions.findIndex(e => e.id == this.selectedQues.id);\r\n        if (!this.selectedQues.responses) this.selectedQues.responses = [];\r\n        this.selectedQues.responses.push({\r\n            id:id,\r\n            createdAt:new Date().toDateString(),\r\n            message:response,\r\n            relatedToId:this.selectedQues.id,\r\n            seenAt: null\r\n        });\r\n        this._questions[qInd] = this.selectedQues;\r\n        this._subscripers.forEach(s => {\r\n            if (s.onQuesRespondedOn) s.onQuesRespondedOn(this.selectedQues);\r\n        });\r\n    }\r\n    private _onSuccessToSendFaildResponse() {\r\n        this._subscripers.forEach(s => {\r\n            if (s.onSuccessToSendFaildMessage) s.onSuccessToSendFaildMessage();\r\n        });\r\n    }\r\n    private _failToSendResponse() {\r\n        this._subscripers.forEach(s => {\r\n            if (s.onFailToSendRespons) s.onFailToSendRespons();\r\n        });\r\n    }\r\n    respondOnQuestion(response: string) {\r\n        if (!this.selectedQues) return;\r\n        this.lastRespondedMessage = response;\r\n        let data = {\r\n            response,\r\n            relatedToId: this.selectedQues.id,\r\n            customerId: this.selectedQues.senderId\r\n        };\r\n        this._responseOnQuestion(null, response);\r\n        $.post(`${helper.Urls.techSupportUrl}`, JSON.stringify(data))\r\n            .fail(err => {\r\n                this._failToSendResponse();\r\n            });\r\n    }\r\n    sendFaildResponseAgain() {\r\n        if (!this.selectedQues) return;\r\n        let data = {\r\n            response: this.lastRespondedMessage,\r\n            relatedToId: this.selectedQues.id\r\n        };\r\n        this._onSuccessToSendFaildResponse();\r\n        $.post(`${helper.Urls.techSupportUrl}`, data)\r\n            .fail(err => {\r\n                this._failToSendResponse();\r\n            });\r\n    }\r\n    addNewQuestion(q: questionDetailModel) {\r\n        this._questions.unshift(q);\r\n        this._subscripers.forEach(s => {\r\n            if (s.onGetNewQuestion) s.onGetNewQuestion(q);\r\n        });\r\n    }\r\n}\r\nconst TechSupportSquestionManager = {\r\n    quesCRUD: null as QuestionsCRUD,\r\n    onGetDataList(data: questionDetailModel[]) {\r\n        TechSupportPageDom.reDisplayMessages(data);\r\n    },\r\n    handleOnGetData() {\r\n        this.quesCRUD.subscribe(this as any as ISubscriber);\r\n    },\r\n    onQuesSelected(q: questionDetailModel) {\r\n        TechSupportPageDom.setSelectedQuestion(q);\r\n    },\r\n    start() {\r\n        if (TechSupportPageDom.checkIfCurrentPageIsTechSupport) {\r\n            this.quesCRUD = QuestionsCRUD.Create();\r\n            this.quesCRUD.getCustomerQuestions();\r\n            this.handleOnGetData();\r\n            TechSupportPageDom.init(this.quesCRUD);\r\n        }\r\n    }\r\n}.start();\r\n\r\nconst notificationManager = {\r\n    startHandle() {\r\n        NotificationDom.init(); \r\n        setTimeout(() => {\r\n            techHubOperations.init();\r\n        }, 0);\r\n    }\r\n}.startHandle();\r\n//window['techDom'] = TechSupportPageDom;\r\n//window['notifDom'] = NotificationDom;"]}